{"version":3,"sources":["Components/Signin/Signin.js","Components/Register/Register.js","Components/Navigation/Navigation.js","Components/FaceRecognition/FaceRecognition.js","Components/Logo/Logo.js","Components/ImageLinksForm/ImageLinksForm.js","Components/Rank/Rank.js","App.js","serviceWorker.js","index.js","Components/Logo/brain.png"],"names":["Signin","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","props","loadUser","onRouteChange","this","className","htmlFor","onChange","type","name","onClick","React","Component","Register","onNameChange","Navigation","isSignedIn","style","display","justifyContent","FaceRecognition","imageUrl","box","alt","src","width","height","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Logo","options","max","paddingTop","brain","ImageLinksForm","onInputChange","onButtonSubmit","Rank","entries","particleOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","count","Object","assign","catch","err","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.d3c27927.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Signin extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      signInEmail : '',\n      signInPassword : ''\n    }\n  }\n  \n  onEmailChange = (event) => {\n    this.setState({\n      signInEmail: event.target.value\n    })\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({\n      signInPassword: event.target.value\n    })\n  }\n\n  onSubmitSignIn = () => {\n    fetch('https://majestic-sequoia-49816.herokuapp.com/signin', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.signInEmail,\n        password: this.state.signInPassword\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          this.props.loadUser(user)\n          this.props.onRouteChange('home');\n        }\n      })\n  }\n  \n  render(){\n    const { onRouteChange } = this.props;\n    return (\n      <article className=\"br3 ba shadow-5 b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  onChange = {this.onEmailChange}\n                  className=\"pa2 input-reset ba b--black bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  onChange = {this.onPasswordChange}\n                  className=\"b pa2 input-reset ba b--black bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick = {this.onSubmitSignIn}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Sign in\"\n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p  onClick = {() => onRouteChange('register')} className=\"pointer f6 link dim black db\">\n                Register\n              </p>\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n};\n\nexport default Signin;\n","import React from \"react\";\n\n\nclass Register extends React.Component{\n  constructor() {\n    super();\n    this.state = {\n      email : '',\n      password : '',\n      name: ''\n    }\n  }\n\n  \n  onNameChange = (event) => {\n    this.setState({\n      name: event.target.value\n    })\n  }\n  \n  onEmailChange = (event) => {\n    this.setState({\n      email: event.target.value\n    })\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({\n      password: event.target.value\n    })\n  }\n\n  onSubmitSignIn = () => {\n    fetch('https://majestic-sequoia-49816.herokuapp.com/register', {\n      method : 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        name: this.state.name\n      })\n    })\n    .then(response => response.json())\n    .then( user => {\n      if (user.id){\n        this.props.loadUser(user);\n        this.props.onRouteChange('home');\n      }\n    })\n  }\n  \n  \n  render(){\n    return (\n      <article className=\"br3 ba shadow-5 b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Name\n                </label>\n                <input\n                  className=\"pa2 input-reset ba b--black bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  onChange = {this.onNameChange}\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  className=\"pa2 input-reset ba b--black bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange = {this.onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  className=\"b pa2 input-reset b--black ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange = {this.onPasswordChange}\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick = {this.onSubmitSignIn}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Register\"\n              />\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n} \n\nexport default Register;\n","import React from \"react\";\n\nconst Navigation = ({onRouteChange, isSignedIn}) => { \n    if (isSignedIn) {\n      return (\n    <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n      <p onClick = {() => onRouteChange('signout')} className = \"f3 link dim black underline pa3 pointer\">Sign Out</p>\n    </nav>\n      )} else {\n      return (\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n      <p onClick = {() => onRouteChange('signin')} className = \"f3 link dim black underline pa3 pointer\">Sign In</p>\n       <p onClick = {() => onRouteChange('register')} className = \"f3 link dim black underline pa3 pointer\">Register</p>\n    </nav>\n       )}\n};\n\nexport default Navigation;","import React from \"react\";\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({imageUrl, box}) => {\n  return (\n    <div className = \"center ma\">\n      <div className = \"absolute mt2\" >\n        <img id = \"inputImage\" alt = \"\" src = {imageUrl} width = \"500px\" height = \"auto\" />\n      <div className= \"bounding-box\" style = {{top: box.topRow, right: box.rightCol, bottom : box.bottomRow, left: box.leftCol}}></div>\n      </div>\n    </div>\n  );\n};\n\nexport default FaceRecognition;\n","import React from \"react\";\nimport Tilt from 'react-tilt'\nimport './Logo.css'\nimport brain from './brain.png'\n\n\nconst Logo = () => {\n  return (\n    <div className=\"ma3 mt3\">\n      <Tilt\n        className=\"Tilt  br2 shadow-2\"\n        options={{ max: 25 }}\n        style={{ height:150, width: 150 }}\n      >\n        <div className=\"Tilt-inner pa1\"><img style={{paddingTop: '5px'}} alt= \"Brain-logo\" src = {brain}/></div>\n      </Tilt>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\nimport './ImageLinksForm.css'\n\nconst ImageLinksForm = ({onInputChange, onButtonSubmit}) => {\n  return (\n    <div>\n      <p className=\"f3\">{\"This brain detects pictures. Give it a try\"}</p>\n      <div className=\"center\">\n        <div className=\"pa4 br3 shadow-5 center form \">\n          <input className=\"f4 pa2 w-70 center\" onChange = {onInputChange} type=\"text\" />\n          <button className=\"w-30 grow f4 link ph3 pv2 dib white bg-blue\" onClick = {onButtonSubmit}>\n            Detect\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageLinksForm;\n","import React from \"react\";\n\nconst Rank = ({name, entries}) => {\n  return (\n    <div>\n      <div className = \"white f3\">\n        {`${name}, your current entry count is ...`}\n      </div>\n      <div className='white f1 '>\n        {entries}\n      </div>\n    </div>\n  );\n};\n\nexport default Rank;\n","// Built By Emmanuel Ezenwigbo\n\nimport React, { Component } from \"react\";\nimport Particles from \"react-particles-js\";\nimport Signin from \"./Components/Signin/Signin\";\nimport Register from './Components/Register/Register'\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport FaceRecognition from \"./Components/FaceRecognition/FaceRecognition\"\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinksForm from \"./Components/ImageLinksForm/ImageLinksForm\";\nimport Rank from \"./Components/Rank/Rank\";\nimport \"./App.css\";\nimport \"tachyons\";\n \nconst particleOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800,\n      },\n    },\n  },\n};\n\nconst initialState = {\n  input: \"\",\n  imageUrl: \"\",\n  box: {},\n  route: 'signin',\n  isSignedIn : false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {},\n      route: 'signin',\n      isSignedIn : false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }})\n  }\n\n  componentDidMount(){\n    fetch('https://majestic-sequoia-49816.herokuapp.com/')\n      .then(response => response.json());\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width =  Number(image.width);\n    const height = Number(image.height);\n    return{\n      leftCol : clarifaiFace.left_col * width,\n      topRow : clarifaiFace.top_row *height,\n      rightCol : width - (clarifaiFace.right_col * width),\n      bottomRow : height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box)\n    this.setState({box : box})\n  }\n\n  onInputChange = (event) => {\n    this.setState({input :event.target.value});\n  };\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl : this.state.input})\n    fetch('https://majestic-sequoia-49816.herokuapp.com/imageurl',{\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              input: this.state.input\n            })\n          })\n        .then(response => response.json())\n        .then(response =>{ \n        if(response){\n          fetch('https://majestic-sequoia-49816.herokuapp.com/image',{\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, { entries: count }))\n          }).catch(err => console.log(err)) \n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err))\n  };\n\n  onRouteChange = (route) => {\n    if ( route === 'signout'){\n      this.setState(initialState)\n    }else if (route === 'home'){\n      this.setState({isSignedIn : true})\n    }\n    this.setState({route : route})\n  }\n\n  render() {\n   const  { isSignedIn , imageUrl , route, box } = this.state\n    return (\n      <div className=\"App\"> \n        <Particles className=\"particles\" params={{ particleOptions }} />\n        <Navigation isSignedIn = {isSignedIn} onRouteChange = {this.onRouteChange} />\n        {route === 'home' ? \n        <div>\n        <Logo />\n        \n        <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n        <ImageLinksForm\n          onInputChange={this.onInputChange}\n          onButtonSubmit={this.onButtonSubmit}\n        />\n        <FaceRecognition box = {box} imageUrl = {imageUrl}/>\n        </div> : \n        (\n         route === 'signin' ? <Signin loadUser = {this.loadUser} onRouteChange = {this.onRouteChange} /> :\n         <Register loadUser = {this.loadUser} onRouteChange = {this.onRouteChange}/>\n        )    \n        }\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.a571d66a.png\";"],"sourceRoot":""}